{"version":3,"sources":["load.js","setup.js"],"names":["window","load","onSuccess","onError","xhr","XMLHttpRequest","open","addEventListener","evt","status","JSON","parse","responseText","statusText","timeout","send","tableOrderCarList","document","querySelector","orderCarTemplate","content","addingForm","inputName","inputYear","inputPrice","inputDescription","radiosName","querySelectorAll","selectStatus","renderOrderCar","orderCar","carStatus","identificationOfStatus","carElement","cloneNode","carElementTable","textContent","title","description","year","classList","add","color","price","remove","createNewOrderCar","orderCarLastID","id","value","elems","i","length","checked","checkRadio","isValidityInputs","_len","arguments","inputsForm","Array","_key","filter","call","elem","fragment","createDocumentFragment","newOrderCar","Number","appendChild","errorMessage","node","createElement","body","insertAdjacentElement"],"mappings":"aAOAA,OAAAC,KAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,IAAAC,eAEAD,EAAAE,KAAA,MALA,sIAOAF,EAAAG,iBAAA,OAAA,SAAAC,GACA,MAAAJ,EAAAK,OACAP,EAAAQ,KAAAC,MAAAP,EAAAQ,eAEAT,EAAAA,kCAAAC,EAAAK,OAAA,IAAAL,EAAAS,cAIAT,EAAAG,iBAAA,QAAA,SAAAC,GACAL,EAAA,iCAGAC,EAAAG,iBAAA,UAAA,SAAAC,GACAL,EAAAA,kCAAAC,EAAAU,QAAA,SAGAV,EAAAU,QAAA,IAEAV,EAAAW,QC5BA,WAGA,IAAAC,EAAAC,SAAAC,cAAA,oBACAC,EAAAF,SAAAC,cAAA,uBAAAE,QAEAC,EAAAJ,SAAAC,cAAA,SACAI,EAAAD,EAAAH,cAAA,eACAK,EAAAF,EAAAH,cAAA,eACAM,EAAAH,EAAAH,cAAA,gBACAO,EAAAJ,EAAAH,cAAA,sBACAQ,EAAAL,EAAAM,iBAAA,oCACAC,EAAAP,EAAAH,cAAA,kBAGAW,GAFAR,EAAAM,iBAAA,gBAEA,SAAAG,GACA,IAaAC,EAbA,SAAAA,GACA,OAAAA,GACA,IAAA,WACA,MAAA,YACA,IAAA,eACA,MAAA,gBACA,IAAA,WACA,MAAA,YACA,QACA,MAAA,iBAIAC,CAAAF,EAAArB,QAEAwB,EAAAd,EAAAe,WAAA,GACAC,EAAAF,EAAAf,cAAA,gBAcA,OAZAe,EAAAf,cAAA,6BAAAkB,YAAAN,EAAAO,MACAJ,EAAAf,cAAA,mCAAAkB,YAAAN,EAAAQ,YACAL,EAAAf,cAAA,0CAAAkB,YAAAN,EAAAQ,YACAL,EAAAf,cAAA,4BAAAkB,YAAAN,EAAAS,KACAN,EAAAf,cAAA,sBAAAsB,UAAAC,IAAA,sBAAAX,EAAAY,OACAT,EAAAf,cAAA,8BAAAkB,YAAAL,EACAE,EAAAf,cAAA,6BAAAkB,YAAAN,EAAAa,MAAA,QAEAV,EAAAf,cAAA,gBAAAX,iBAAA,QAAA,SAAAC,GACA2B,EAAAS,WAGAX,IAGAY,EAAA,WAqBA,OAZAC,kBAGAC,GAAAD,eACAT,MAAAf,EAAA0B,MACAV,YAAAb,EAAAuB,MACAT,KAAAhB,EAAAyB,MACAN,MAfA,SAAAO,GACA,IAAA,IAAAC,EAAA,EAAAA,EAAAD,EAAAE,OAAAD,IACA,GAAAD,EAAAC,GAAAE,QACA,OAAAH,EAAAC,GAYAG,CAAA3B,GAAAsB,MACAvC,OAAAmB,EAAAoB,MACAL,MAAAnB,EAAAwB,QAMAM,EAAA,WAAA,IAAA,IAAAC,EAAAC,UAAAL,OAAAM,EAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAGA,SAFAC,OAAAC,KAAAJ,EAAA,SAAAK,GAAA,MAAA,KAAAA,EAAAd,QAEAG,QAqCA9B,EAAAH,cAAA,gBAAAX,iBAAA,QAlCA,SAAAC,GACA,IAAAuD,EAAA9C,SAAA+C,yBACAC,EAAApB,IAEAS,EAAAhC,EAAAC,EAAAC,IAEA0C,OAAA3C,EAAAyB,QAAAkB,OAAA1C,EAAAwB,SACAe,EAAAI,YAAAtC,EAAAoC,IACAjD,EAAAmD,YAAAJ,MA4BA9D,KAtBA,SAAA6B,GACA9B,OAAA8C,eAAAhB,EAAAqB,OAIA,IAAA,IAFAY,EAAA9C,SAAA+C,yBAEAd,EAAA,EAAAA,EAAApB,EAAAqB,OAAAD,IACAa,EAAAI,YAAAtC,EAAAC,EAAAoB,KAGAlC,EAAAmD,YAAAJ,IAGA,SAAAK,GACA,IAAAC,EAAApD,SAAAqD,cAAA,OAEAD,EAAA7B,UAAAC,IAAA,iBACA4B,EAAAjC,YAAAgC,EACAnD,SAAAsD,KAAAC,sBAAA,aAAAH,KA9GA","file":"script.min.js","sourcesContent":["// file load.js\n\n(() => {\n  'use strict';\n\n  const URL = 'https://rawgit.com/Varinetz/e6cbadec972e76a340c41a65fcc2a6b3/raw/90191826a3bac2ff0761040ed1d95c59f14eaf26/frontend_test_table.json';\n\n  window.load = (onSuccess, onError) => {\n    const xhr = new XMLHttpRequest();\n\n    xhr.open('GET', URL);\n\n    xhr.addEventListener('load', (evt) => {\n      if (xhr.status === 200) {\n        onSuccess(JSON.parse(xhr.responseText));\n      } else {\n        onError(`Ошибка загрузки данных: статус ${xhr.status} ${xhr.statusText}`);\n      }\n    });\n\n    xhr.addEventListener('error', (evt) => {\n      onError('Произошла ошибка соединения');\n    });\n\n    xhr.addEventListener('timeout', (evt) => {\n      onError(`Запрос не успел выполниться за ${xhr.timeout} мс`);\n    });\n\n    xhr.timeout = 10000;\n\n    xhr.send();\n  };\n})();\n","// file setup.js\n\n(() => {\n  'use strict';\n\n  const tableOrderCarList = document.querySelector('#table-order-car');\n  const orderCarTemplate = document.querySelector('#template-order-car').content;\n\n  const addingForm = document.querySelector('.form'),\n    inputName = addingForm.querySelector('#input-name'),\n    inputYear = addingForm.querySelector('#input-year'),\n    inputPrice = addingForm.querySelector('#input-price'),\n    inputDescription = addingForm.querySelector('#input-description'),\n    radiosName = addingForm.querySelectorAll('.form__input-radio[name=\"color\"]'),\n    selectStatus = addingForm.querySelector('#select-status'),\n    formInput = addingForm.querySelectorAll('.form__input');\n\n  const renderOrderCar = (orderCar) => {\n    const identificationOfStatus = (carStatus) => {\n      switch (carStatus) {\n        case 'pednding':\n          return 'Ожидается';\n        case 'out_of_stock':\n          return 'Нет в наличии';\n        case 'in_stock':\n          return 'В наличии';\n        default:\n          return 'Нет в наличии';\n      }\n    };\n\n    const carStatus = identificationOfStatus(orderCar.status);\n\n    const carElement = orderCarTemplate.cloneNode(true);\n    const carElementTable = carElement.querySelector('.table__item');\n\n    carElement.querySelector('.table__item-value--title').textContent = orderCar.title;\n    carElement.querySelector('.table__item-value--description').textContent = orderCar.description;\n    carElement.querySelector('.table__item-value--description-mobile').textContent = orderCar.description;\n    carElement.querySelector('.table__item-value--year').textContent = orderCar.year;\n    carElement.querySelector('.indication-circle').classList.add(`indication-circle--${orderCar.color}`);\n    carElement.querySelector('.table__item-value--status').textContent = carStatus;\n    carElement.querySelector('.table__item-value--price').textContent = `${orderCar.price} руб.`;\n\n    carElement.querySelector('.btn--delete').addEventListener('click', (evt) => {\n      carElementTable.remove();\n    });\n\n    return carElement;\n  };\n\n  const createNewOrderCar = () => {\n    const checkRadio = (elems) => {\n      for (let i = 0; i < elems.length; i++) {\n        if (elems[i].checked) {\n          return elems[i];\n        }\n      }\n    };\n\n    orderCarLastID++;\n\n    const orderCar = {\n      id: orderCarLastID,\n      title: inputName.value,\n      description: inputDescription.value,\n      year: inputYear.value,\n      color: checkRadio(radiosName).value,\n      status: selectStatus.value,\n      price: inputPrice.value\n    };\n\n    return orderCar;\n  };\n\n  const isValidityInputs = (...inputsForm) => {\n    const inputsFormFilter = [].filter.call(inputsForm, (elem) => elem.value !== '');\n\n    return inputsFormFilter.length;\n  };\n\n  const onAddNewOrderCar = (evt) => {\n    const fragment = document.createDocumentFragment(),\n          newOrderCar = createNewOrderCar();\n\n    if (isValidityInputs(inputName, inputYear, inputPrice)) {\n\n      if (Number(inputYear.value) && Number(inputPrice.value)) {\n        fragment.appendChild(renderOrderCar(newOrderCar));\n        tableOrderCarList.appendChild(fragment);\n      }\n\n    }\n  };\n\n  const successHandler = (orderCar) => {\n    window.orderCarLastID = orderCar.length;\n\n    const fragment = document.createDocumentFragment();\n\n    for (let i = 0; i < orderCar.length; i++) {\n      fragment.appendChild(renderOrderCar(orderCar[i]));\n    }\n\n    tableOrderCarList.appendChild(fragment);\n  };\n\n  const errorHandler = (errorMessage) => {\n    const node = document.createElement('div');\n\n    node.classList.add('error-message');\n    node.textContent = errorMessage;\n    document.body.insertAdjacentElement('afterbegin', node);\n  };\n\n  addingForm.querySelector('.btn--submit').addEventListener('click', onAddNewOrderCar);\n\n  load(successHandler, errorHandler);\n})();\n"]}