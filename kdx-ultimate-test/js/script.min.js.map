{"version":3,"sources":["load.js","setup.js"],"names":["window","load","onSuccess","onError","xhr","XMLHttpRequest","open","addEventListener","evt","status","JSON","parse","responseText","statusText","timeout","send","tableOrderCarList","document","querySelector","orderCarTemplate","content","renderOrderCar","orderCar","carStatus","identificationOfStatus","carElement","cloneNode","carElementTable","textContent","title","description","year","classList","add","color","price","remove","fragment","createDocumentFragment","i","length","appendChild","errorMessage","node","createElement","body","insertAdjacentElement"],"mappings":"aAOEA,OAAOC,KAAO,SAACC,EAAWC,GACxB,IAAMC,EAAM,IAAIC,eAEhBD,EAAIE,KAAK,MALC,sIAOVF,EAAIG,iBAAiB,OAAQ,SAACC,GACT,MAAfJ,EAAIK,OACNP,EAAUQ,KAAKC,MAAMP,EAAIQ,eAEzBT,EAAAA,kCAA0CC,EAAIK,OAA9C,IAAwDL,EAAIS,cAIhET,EAAIG,iBAAiB,QAAS,SAACC,GAC7BL,EAAQ,iCAGVC,EAAIG,iBAAiB,UAAW,SAACC,GAC/BL,EAAAA,kCAA0CC,EAAIU,QAA9C,SAGFV,EAAIU,QAAU,IAEdV,EAAIW,QC5BR,WAEE,IAAMC,EAAoBC,SAASC,cAAc,oBAC3CC,EAAmBF,SAASC,cAAc,uBAAuBE,QAEjEC,EAAiB,SAACC,GACtB,IAaMC,EAbyB,SAACA,GAC9B,OAAQA,GACN,IAAK,WACH,MAAO,YACT,IAAK,eACH,MAAO,gBACT,IAAK,WACH,MAAO,YACT,QACE,MAAO,iBAIKC,CAAuBF,EAASb,QAE5CgB,EAAaN,EAAiBO,WAAU,GACxCC,EAAkBF,EAAWP,cAAc,gBAcjD,OAZAO,EAAWP,cAAc,6BAA6BU,YAAcN,EAASO,MAC7EJ,EAAWP,cAAc,mCAAmCU,YAAcN,EAASQ,YACnFL,EAAWP,cAAc,0CAA0CU,YAAcN,EAASQ,YAC1FL,EAAWP,cAAc,4BAA4BU,YAAcN,EAASS,KAC5EN,EAAWP,cAAc,sBAAsBc,UAAUC,IAAzD,sBAAmFX,EAASY,OAC5FT,EAAWP,cAAc,8BAA8BU,YAAcL,EACrEE,EAAWP,cAAc,6BAA6BU,YAAiBN,EAASa,MAAhF,QAEAV,EAAWP,cAAc,gBAAgBX,iBAAiB,QAAS,SAACC,GAClEmB,EAAgBS,WAGXX,GAqBTxB,KAlBuB,SAACqB,GAGtB,IAAK,IAFCe,EAAWpB,SAASqB,yBAEjBC,EAAI,EAAGA,EAAIjB,EAASkB,OAAQD,IACnCF,EAASI,YAAYpB,EAAeC,EAASiB,KAG/CvB,EAAkByB,YAAYJ,IAGX,SAACK,GACpB,IAAMC,EAAO1B,SAAS2B,cAAc,OAEpCD,EAAKX,UAAUC,IAAI,iBACnBU,EAAKf,YAAcc,EACnBzB,SAAS4B,KAAKC,sBAAsB,aAAcH,KAtDtD","file":"script.min.js","sourcesContent":["// file load.js\n\n(() => {\n  'use strict';\n\n  const URL = 'https://rawgit.com/Varinetz/e6cbadec972e76a340c41a65fcc2a6b3/raw/90191826a3bac2ff0761040ed1d95c59f14eaf26/frontend_test_table.json';\n\n  window.load = (onSuccess, onError) => {\n    const xhr = new XMLHttpRequest();\n\n    xhr.open('GET', URL);\n\n    xhr.addEventListener('load', (evt) => {\n      if (xhr.status === 200) {\n        onSuccess(JSON.parse(xhr.responseText));\n      } else {\n        onError(`Ошибка загрузки данных: статус ${xhr.status} ${xhr.statusText}`);\n      }\n    });\n\n    xhr.addEventListener('error', (evt) => {\n      onError('Произощла ошибка соединения');\n    });\n\n    xhr.addEventListener('timeout', (evt) => {\n      onError(`Запрос не успел выполниться за ${xhr.timeout} мс`);\n    });\n\n    xhr.timeout = 10000;\n\n    xhr.send();\n  };\n})();\n","// file setup.js\n\n(() => {\n  'use strict';\n  const tableOrderCarList = document.querySelector('#table-order-car');\n  const orderCarTemplate = document.querySelector('#template-order-car').content;\n\n  const renderOrderCar = (orderCar) => {\n    const identificationOfStatus = (carStatus) => {\n      switch (carStatus) {\n        case 'pednding':\n          return 'Ожидается';\n        case 'out_of_stock':\n          return 'Нет в наличии';\n        case 'in_stock':\n          return 'В наличии';\n        default:\n          return 'Нет в наличии';\n      }\n    };\n\n    const carStatus = identificationOfStatus(orderCar.status);\n\n    const carElement = orderCarTemplate.cloneNode(true);\n    const carElementTable = carElement.querySelector('.table__item');\n\n    carElement.querySelector('.table__item-value--title').textContent = orderCar.title;\n    carElement.querySelector('.table__item-value--description').textContent = orderCar.description;\n    carElement.querySelector('.table__item-value--description-mobile').textContent = orderCar.description;\n    carElement.querySelector('.table__item-value--year').textContent = orderCar.year;\n    carElement.querySelector('.indication-circle').classList.add(`indication-circle--${orderCar.color}`);\n    carElement.querySelector('.table__item-value--status').textContent = carStatus;\n    carElement.querySelector('.table__item-value--price').textContent = `${orderCar.price} руб.`;\n\n    carElement.querySelector('.btn--delete').addEventListener('click', (evt) => {\n      carElementTable.remove();\n    });\n\n    return carElement;\n  };\n\n  const successHandler = (orderCar) => {\n    const fragment = document.createDocumentFragment();\n\n    for (let i = 0; i < orderCar.length; i++) {\n      fragment.appendChild(renderOrderCar(orderCar[i]));\n    }\n\n    tableOrderCarList.appendChild(fragment);\n  };\n\n  const errorHandler = (errorMessage) => {\n    const node = document.createElement('div');\n\n    node.classList.add('error-message');\n    node.textContent = errorMessage;\n    document.body.insertAdjacentElement('afterbegin', node);\n  };\n\n  load(successHandler, errorHandler);\n})();\n"]}