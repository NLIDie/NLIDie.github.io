{"version":3,"sources":["load.js","setup.js"],"names":["window","load","onSuccess","onError","xhr","XMLHttpRequest","open","addEventListener","evt","status","JSON","parse","responseText","statusText","timeout","send","tableOrderCarList","document","querySelector","orderCarTemplate","content","renderOrderCar","orderCar","carStatus","identificationOfStatus","carElement","cloneNode","carElementTable","textContent","title","description","year","classList","add","color","price","remove","createNewOrderCar","addingForm","inputName","inputYear","inputPrice","inputDescription","radiosName","querySelectorAll","selectStatus","orderCarLastID","id","value","elems","i","length","checked","checkRadio","fragment","createDocumentFragment","newOrderCar","appendChild","preventDefault","errorMessage","node","createElement","body","insertAdjacentElement"],"mappings":"aAOAA,OAAAC,KAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,IAAAC,eAEAD,EAAAE,KAAA,MALA,sIAOAF,EAAAG,iBAAA,OAAA,SAAAC,GACA,MAAAJ,EAAAK,OACAP,EAAAQ,KAAAC,MAAAP,EAAAQ,eAEAT,EAAAA,kCAAAC,EAAAK,OAAA,IAAAL,EAAAS,cAIAT,EAAAG,iBAAA,QAAA,SAAAC,GACAL,EAAA,iCAGAC,EAAAG,iBAAA,UAAA,SAAAC,GACAL,EAAAA,kCAAAC,EAAAU,QAAA,SAGAV,EAAAU,QAAA,IAEAV,EAAAW,QC5BA,WAGA,IAAAC,EAAAC,SAAAC,cAAA,oBACAC,EAAAF,SAAAC,cAAA,uBAAAE,QAEAC,EAAA,SAAAC,GACA,IAaAC,EAbA,SAAAA,GACA,OAAAA,GACA,IAAA,WACA,MAAA,YACA,IAAA,eACA,MAAA,gBACA,IAAA,WACA,MAAA,YACA,QACA,MAAA,iBAIAC,CAAAF,EAAAb,QAEAgB,EAAAN,EAAAO,WAAA,GACAC,EAAAF,EAAAP,cAAA,gBAcA,OAZAO,EAAAP,cAAA,6BAAAU,YAAAN,EAAAO,MACAJ,EAAAP,cAAA,mCAAAU,YAAAN,EAAAQ,YACAL,EAAAP,cAAA,0CAAAU,YAAAN,EAAAQ,YACAL,EAAAP,cAAA,4BAAAU,YAAAN,EAAAS,KACAN,EAAAP,cAAA,sBAAAc,UAAAC,IAAA,sBAAAX,EAAAY,OACAT,EAAAP,cAAA,8BAAAU,YAAAL,EACAE,EAAAP,cAAA,6BAAAU,YAAAN,EAAAa,MAAA,QAEAV,EAAAP,cAAA,gBAAAX,iBAAA,QAAA,SAAAC,GACAmB,EAAAS,WAGAX,GAGAY,EAAA,WACA,IAAAC,EAAArB,SAAAC,cAAA,SACAqB,EAAAD,EAAApB,cAAA,eACAsB,EAAAF,EAAApB,cAAA,eACAuB,EAAAH,EAAApB,cAAA,gBACAwB,EAAAJ,EAAApB,cAAA,sBACAyB,EAAAL,EAAAM,iBAAA,oCACAC,EAAAP,EAAApB,cAAA,kBAuBA,OAZA4B,kBAGAC,GAAAD,eACAjB,MAAAU,EAAAS,MACAlB,YAAAY,EAAAM,MACAjB,KAAAS,EAAAQ,MACAd,MAfA,SAAAe,GACA,IAAA,IAAAC,EAAA,EAAAA,EAAAD,EAAAE,OAAAD,IACA,GAAAD,EAAAC,GAAAE,QACA,OAAAH,EAAAC,GAYAG,CAAAV,GAAAK,MACAvC,OAAAoC,EAAAG,MACAb,MAAAM,EAAAO,QAoCA/B,SAAAC,cAAA,gBAAAX,iBAAA,QA9BA,SAAAC,GACA,IAAA8C,EAAArC,SAAAsC,yBACAC,EAAAnB,IAEAiB,EAAAG,YAAApC,EAAAmC,IACAxC,EAAAyC,YAAAH,GAEA9C,EAAAkD,mBAyBAzD,KAtBA,SAAAqB,GACAtB,OAAA8C,eAAAxB,EAAA6B,OAIA,IAAA,IAFAG,EAAArC,SAAAsC,yBAEAL,EAAA,EAAAA,EAAA5B,EAAA6B,OAAAD,IACAI,EAAAG,YAAApC,EAAAC,EAAA4B,KAGAlC,EAAAyC,YAAAH,IAGA,SAAAK,GACA,IAAAC,EAAA3C,SAAA4C,cAAA,OAEAD,EAAA5B,UAAAC,IAAA,iBACA2B,EAAAhC,YAAA+B,EACA1C,SAAA6C,KAAAC,sBAAA,aAAAH,KApGA","file":"script.min.js","sourcesContent":["// file load.js\n\n(() => {\n  'use strict';\n\n  const URL = 'https://rawgit.com/Varinetz/e6cbadec972e76a340c41a65fcc2a6b3/raw/90191826a3bac2ff0761040ed1d95c59f14eaf26/frontend_test_table.json';\n\n  window.load = (onSuccess, onError) => {\n    const xhr = new XMLHttpRequest();\n\n    xhr.open('GET', URL);\n\n    xhr.addEventListener('load', (evt) => {\n      if (xhr.status === 200) {\n        onSuccess(JSON.parse(xhr.responseText));\n      } else {\n        onError(`Ошибка загрузки данных: статус ${xhr.status} ${xhr.statusText}`);\n      }\n    });\n\n    xhr.addEventListener('error', (evt) => {\n      onError('Произошла ошибка соединения');\n    });\n\n    xhr.addEventListener('timeout', (evt) => {\n      onError(`Запрос не успел выполниться за ${xhr.timeout} мс`);\n    });\n\n    xhr.timeout = 10000;\n\n    xhr.send();\n  };\n})();\n","// file setup.js\n\n(() => {\n  'use strict';\n\n  const tableOrderCarList = document.querySelector('#table-order-car');\n  const orderCarTemplate = document.querySelector('#template-order-car').content;\n\n  const renderOrderCar = (orderCar) => {\n    const identificationOfStatus = (carStatus) => {\n      switch (carStatus) {\n        case 'pednding':\n          return 'Ожидается';\n        case 'out_of_stock':\n          return 'Нет в наличии';\n        case 'in_stock':\n          return 'В наличии';\n        default:\n          return 'Нет в наличии';\n      }\n    };\n\n    const carStatus = identificationOfStatus(orderCar.status);\n\n    const carElement = orderCarTemplate.cloneNode(true);\n    const carElementTable = carElement.querySelector('.table__item');\n\n    carElement.querySelector('.table__item-value--title').textContent = orderCar.title;\n    carElement.querySelector('.table__item-value--description').textContent = orderCar.description;\n    carElement.querySelector('.table__item-value--description-mobile').textContent = orderCar.description;\n    carElement.querySelector('.table__item-value--year').textContent = orderCar.year;\n    carElement.querySelector('.indication-circle').classList.add(`indication-circle--${orderCar.color}`);\n    carElement.querySelector('.table__item-value--status').textContent = carStatus;\n    carElement.querySelector('.table__item-value--price').textContent = `${orderCar.price} руб.`;\n\n    carElement.querySelector('.btn--delete').addEventListener('click', (evt) => {\n      carElementTable.remove();\n    });\n\n    return carElement;\n  };\n\n  const createNewOrderCar = () => {\n    const addingForm = document.querySelector('.form'),\n          inputName = addingForm.querySelector('#input-name'),\n          inputYear = addingForm.querySelector('#input-year'),\n          inputPrice = addingForm.querySelector('#input-price'),\n          inputDescription = addingForm.querySelector('#input-description'),\n          radiosName = addingForm.querySelectorAll('.form__input-radio[name=\"color\"]'),\n          selectStatus = addingForm.querySelector('#select-status');\n\n\n    const checkRadio = (elems) => {\n      for (let i = 0; i < elems.length; i++) {\n        if (elems[i].checked) {\n          return elems[i];\n        }\n      }\n    };\n\n    orderCarLastID++;\n\n    const orderCar = {\n      id: orderCarLastID,\n      title: inputName.value,\n      description: inputDescription.value,\n      year: inputYear.value,\n      color: checkRadio(radiosName).value,\n      status: selectStatus.value,\n      price: inputPrice.value\n    };\n\n    return orderCar;\n  };\n\n  const onAddNewOrderCar = (evt) => {\n    const fragment = document.createDocumentFragment(),\n          newOrderCar = createNewOrderCar();\n\n    fragment.appendChild(renderOrderCar(newOrderCar));\n    tableOrderCarList.appendChild(fragment);\n\n    evt.preventDefault();\n  };\n\n  const successHandler = (orderCar) => {\n    window.orderCarLastID = orderCar.length;\n\n    const fragment = document.createDocumentFragment();\n\n    for (let i = 0; i < orderCar.length; i++) {\n      fragment.appendChild(renderOrderCar(orderCar[i]));\n    }\n\n    tableOrderCarList.appendChild(fragment);\n  };\n\n  const errorHandler = (errorMessage) => {\n    const node = document.createElement('div');\n\n    node.classList.add('error-message');\n    node.textContent = errorMessage;\n    document.body.insertAdjacentElement('afterbegin', node);\n  };\n\n  document.querySelector('.btn--submit').addEventListener('click', onAddNewOrderCar);\n\n  load(successHandler, errorHandler);\n})();\n"]}